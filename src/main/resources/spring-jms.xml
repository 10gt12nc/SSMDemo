<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:core="http://activemq.apache.org/schema/core" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:redis="http://www.springframework.org/schema/redis"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:spring="http://camel.apache.org/schema/spring" xmlns:stat="http://www.alibaba.com/schema/stat"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:v2.19="http://camel.apache.org/schema/spring/v2.19"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.3.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.3.xsd
		http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.0-M1.xsd
		http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://camel.apache.org/schema/spring/v2.19 http://camel.apache.org/schema/spring/v2.19">



	<!-- 連接工廠 -->
	<!-- Spring用於管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<description>JMS連接工廠</description>

		<!-- 真正產生Connection的ConnectionFactory，由 JMS服務廠商提供 -->
		<property name="targetConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />
				<!-- 已設定不用帳密即可登入 -->
				<!--ActiveMQ未允许传输序列化对象 ,如果传输对象，必须设置这句为true -->
				<property name="trustAllPackages" value="true" />
			</bean>
		</property>
		<property name="sessionCacheSize" value="100"></property>
				<!-- 
						快取數量 
-->
	</bean>

	<!-- 消息生產者 ,可以進行訊息傳送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<description>隊列模式模型</description>
		<constructor-arg ref="connectionFactory" />
		<property name="receiveTimeout" value="10000" />	
		<!-- 
設定的時間內還沒有受到回應，就會拋出SocketException異常。
-->
		<!-- true:Topic ; 默認或false:queue(隊列) -->
		<property name="pubSubDomain" value="false" />
		<!-- true:發布訂閱模式 false:點對點模式
			  點對點：Queue，不可重複消費:對一個消息而言，只會有一個消費者可以消費。
			  發布/訂閱：Topic，可以重複消費:消息會被所有訂閱者消費

-->

	</bean>

	<!-- 消息消費者 -->
	<!-- Queue監聽器, 訊息監聽容器 -->
	<jms:listener-container destination-type="queue"
		container-type="default" connection-factory="connectionFactory"
		acknowledge="auto">
		<!-- 可有多個訊息監聽器  destination=列隊名稱 -->
		<jms:listener destination="lin.queue.praise" ref="MoodConsumer" />
	</jms:listener-container>

</beans>
